// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: metric.proto

package org.cloudfoundry.dropsonde.events;

public final class MetricFactory {
	private static final com.google.protobuf.Descriptors.Descriptor
			internal_static_events_ValueMetric_descriptor;

	private static final com.google.protobuf.Descriptors.Descriptor
			internal_static_events_CounterEvent_descriptor;

	private static final com.google.protobuf.Descriptors.Descriptor
			internal_static_events_ContainerMetric_descriptor;

	private static
	com.google.protobuf.GeneratedMessage.FieldAccessorTable
			internal_static_events_ValueMetric_fieldAccessorTable;

	private static
	com.google.protobuf.GeneratedMessage.FieldAccessorTable
			internal_static_events_CounterEvent_fieldAccessorTable;

	private static
	com.google.protobuf.GeneratedMessage.FieldAccessorTable
			internal_static_events_ContainerMetric_fieldAccessorTable;

	private static com.google.protobuf.Descriptors.FileDescriptor
			descriptor;

	static {
		java.lang.String[] descriptorData = {
				"\n\014metric.proto\022\006events\032\nuuid.proto\"8\n\013Va" +
						"lueMetric\022\014\n\004name\030\001 \002(\t\022\r\n\005value\030\002 \002(\001\022\014" +
						"\n\004unit\030\003 \002(\t\":\n\014CounterEvent\022\014\n\004name\030\001 \002" +
						"(\t\022\r\n\005delta\030\002 \002(\004\022\r\n\005total\030\003 \001(\004\"~\n\017Cont" +
						"ainerMetric\022\025\n\rapplicationId\030\001 \002(\t\022\025\n\rin" +
						"stanceIndex\030\002 \002(\005\022\025\n\rcpuPercentage\030\003 \002(\001" +
						"\022\023\n\013memoryBytes\030\004 \002(\004\022\021\n\tdiskBytes\030\005 \002(\004" +
						"B2\n!org.cloudfoundry.dropsonde.eventsB\rM" +
						"etricFactory"
		};
		com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
				new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
					public com.google.protobuf.ExtensionRegistry assignDescriptors(
							com.google.protobuf.Descriptors.FileDescriptor root) {
						descriptor = root;
						return null;
					}
				};
		com.google.protobuf.Descriptors.FileDescriptor
				.internalBuildGeneratedFileFrom(descriptorData,
						new com.google.protobuf.Descriptors.FileDescriptor[] {
								org.cloudfoundry.dropsonde.events.UuidFactory.getDescriptor(),
						}, assigner);
		internal_static_events_ValueMetric_descriptor =
				getDescriptor().getMessageTypes().get(0);
		internal_static_events_ValueMetric_fieldAccessorTable = new
				com.google.protobuf.GeneratedMessage.FieldAccessorTable(
				internal_static_events_ValueMetric_descriptor,
				new java.lang.String[] {"Name", "Value", "Unit",});
		internal_static_events_CounterEvent_descriptor =
				getDescriptor().getMessageTypes().get(1);
		internal_static_events_CounterEvent_fieldAccessorTable = new
				com.google.protobuf.GeneratedMessage.FieldAccessorTable(
				internal_static_events_CounterEvent_descriptor,
				new java.lang.String[] {"Name", "Delta", "Total",});
		internal_static_events_ContainerMetric_descriptor =
				getDescriptor().getMessageTypes().get(2);
		internal_static_events_ContainerMetric_fieldAccessorTable = new
				com.google.protobuf.GeneratedMessage.FieldAccessorTable(
				internal_static_events_ContainerMetric_descriptor,
				new java.lang.String[] {"ApplicationId", "InstanceIndex", "CpuPercentage", "MemoryBytes", "DiskBytes",});
		org.cloudfoundry.dropsonde.events.UuidFactory.getDescriptor();
	}

	private MetricFactory() {
	}

	public static void registerAllExtensions(
			com.google.protobuf.ExtensionRegistry registry) {
	}

	public static com.google.protobuf.Descriptors.FileDescriptor
	getDescriptor() {
		return descriptor;
	}

	public interface ValueMetricOrBuilder extends
			// @@protoc_insertion_point(interface_extends:events.ValueMetric)
			com.google.protobuf.MessageOrBuilder {

		/**
		 * <code>required string name = 1;</code>
		 * <p>
		 * <pre>
		 * &#47; Name of the metric. Must be consistent for downstream consumers to associate events semantically.
		 * </pre>
		 */
		boolean hasName();

		/**
		 * <code>required string name = 1;</code>
		 * <p>
		 * <pre>
		 * &#47; Name of the metric. Must be consistent for downstream consumers to associate events semantically.
		 * </pre>
		 */
		java.lang.String getName();

		/**
		 * <code>required string name = 1;</code>
		 * <p>
		 * <pre>
		 * &#47; Name of the metric. Must be consistent for downstream consumers to associate events semantically.
		 * </pre>
		 */
		com.google.protobuf.ByteString
		getNameBytes();

		/**
		 * <code>required double value = 2;</code>
		 * <p>
		 * <pre>
		 * &#47; Value at the time of event emission.
		 * </pre>
		 */
		boolean hasValue();

		/**
		 * <code>required double value = 2;</code>
		 * <p>
		 * <pre>
		 * &#47; Value at the time of event emission.
		 * </pre>
		 */
		double getValue();

		/**
		 * <code>required string unit = 3;</code>
		 * <p>
		 * <pre>
		 * &#47; Unit of the metric. Please see http://metrics20.org/spec/#units for ideas; SI units/prefixes are recommended where applicable. Should be consistent for the life of the metric (consumers are expected to report, but not interpret, prefixes).
		 * </pre>
		 */
		boolean hasUnit();

		/**
		 * <code>required string unit = 3;</code>
		 * <p>
		 * <pre>
		 * &#47; Unit of the metric. Please see http://metrics20.org/spec/#units for ideas; SI units/prefixes are recommended where applicable. Should be consistent for the life of the metric (consumers are expected to report, but not interpret, prefixes).
		 * </pre>
		 */
		java.lang.String getUnit();

		/**
		 * <code>required string unit = 3;</code>
		 * <p>
		 * <pre>
		 * &#47; Unit of the metric. Please see http://metrics20.org/spec/#units for ideas; SI units/prefixes are recommended where applicable. Should be consistent for the life of the metric (consumers are expected to report, but not interpret, prefixes).
		 * </pre>
		 */
		com.google.protobuf.ByteString
		getUnitBytes();
	}

	public interface CounterEventOrBuilder extends
			// @@protoc_insertion_point(interface_extends:events.CounterEvent)
			com.google.protobuf.MessageOrBuilder {

		/**
		 * <code>required string name = 1;</code>
		 * <p>
		 * <pre>
		 * &#47; Name of the counter. Must be consistent for downstream consumers to associate events semantically.
		 * </pre>
		 */
		boolean hasName();

		/**
		 * <code>required string name = 1;</code>
		 * <p>
		 * <pre>
		 * &#47; Name of the counter. Must be consistent for downstream consumers to associate events semantically.
		 * </pre>
		 */
		java.lang.String getName();

		/**
		 * <code>required string name = 1;</code>
		 * <p>
		 * <pre>
		 * &#47; Name of the counter. Must be consistent for downstream consumers to associate events semantically.
		 * </pre>
		 */
		com.google.protobuf.ByteString
		getNameBytes();

		/**
		 * <code>required uint64 delta = 2;</code>
		 * <p>
		 * <pre>
		 * &#47; Amount by which to increment the counter.
		 * </pre>
		 */
		boolean hasDelta();

		/**
		 * <code>required uint64 delta = 2;</code>
		 * <p>
		 * <pre>
		 * &#47; Amount by which to increment the counter.
		 * </pre>
		 */
		long getDelta();

		/**
		 * <code>optional uint64 total = 3;</code>
		 * <p>
		 * <pre>
		 * &#47; Total value of the counter. This will be overridden by Metron, which internally tracks the total of each named Counter it receives.
		 * </pre>
		 */
		boolean hasTotal();

		/**
		 * <code>optional uint64 total = 3;</code>
		 * <p>
		 * <pre>
		 * &#47; Total value of the counter. This will be overridden by Metron, which internally tracks the total of each named Counter it receives.
		 * </pre>
		 */
		long getTotal();
	}

	public interface ContainerMetricOrBuilder extends
			// @@protoc_insertion_point(interface_extends:events.ContainerMetric)
			com.google.protobuf.MessageOrBuilder {

		/**
		 * <code>required string applicationId = 1;</code>
		 * <p>
		 * <pre>
		 * &#47; ID of the contained application.
		 * </pre>
		 */
		boolean hasApplicationId();

		/**
		 * <code>required string applicationId = 1;</code>
		 * <p>
		 * <pre>
		 * &#47; ID of the contained application.
		 * </pre>
		 */
		java.lang.String getApplicationId();

		/**
		 * <code>required string applicationId = 1;</code>
		 * <p>
		 * <pre>
		 * &#47; ID of the contained application.
		 * </pre>
		 */
		com.google.protobuf.ByteString
		getApplicationIdBytes();

		/**
		 * <code>required int32 instanceIndex = 2;</code>
		 * <p>
		 * <pre>
		 * &#47; Instance index of the contained application. (This, with applicationId, should uniquely identify a container.)
		 * </pre>
		 */
		boolean hasInstanceIndex();

		/**
		 * <code>required int32 instanceIndex = 2;</code>
		 * <p>
		 * <pre>
		 * &#47; Instance index of the contained application. (This, with applicationId, should uniquely identify a container.)
		 * </pre>
		 */
		int getInstanceIndex();

		/**
		 * <code>required double cpuPercentage = 3;</code>
		 * <p>
		 * <pre>
		 * &#47; CPU used, on a scale of 0 to 100.
		 * </pre>
		 */
		boolean hasCpuPercentage();

		/**
		 * <code>required double cpuPercentage = 3;</code>
		 * <p>
		 * <pre>
		 * &#47; CPU used, on a scale of 0 to 100.
		 * </pre>
		 */
		double getCpuPercentage();

		/**
		 * <code>required uint64 memoryBytes = 4;</code>
		 * <p>
		 * <pre>
		 * &#47; Bytes of memory used.
		 * </pre>
		 */
		boolean hasMemoryBytes();

		/**
		 * <code>required uint64 memoryBytes = 4;</code>
		 * <p>
		 * <pre>
		 * &#47; Bytes of memory used.
		 * </pre>
		 */
		long getMemoryBytes();

		/**
		 * <code>required uint64 diskBytes = 5;</code>
		 * <p>
		 * <pre>
		 * &#47; Bytes of disk used.
		 * </pre>
		 */
		boolean hasDiskBytes();

		/**
		 * <code>required uint64 diskBytes = 5;</code>
		 * <p>
		 * <pre>
		 * &#47; Bytes of disk used.
		 * </pre>
		 */
		long getDiskBytes();
	}

	/**
	 * Protobuf type {@code events.ValueMetric}
	 * <p>
	 * <pre>
	 * &#47; A ValueMetric indicates the value of a metric at an instant in time.
	 * </pre>
	 */
	public static final class ValueMetric extends
			com.google.protobuf.GeneratedMessage implements
			// @@protoc_insertion_point(message_implements:events.ValueMetric)
			ValueMetricOrBuilder {
		public static final int NAME_FIELD_NUMBER = 1;

		public static final int VALUE_FIELD_NUMBER = 2;

		public static final int UNIT_FIELD_NUMBER = 3;

		private static final ValueMetric defaultInstance;

		private static final long serialVersionUID = 0L;

		public static com.google.protobuf.Parser<ValueMetric> PARSER =
				new com.google.protobuf.AbstractParser<ValueMetric>() {
					public ValueMetric parsePartialFrom(
							com.google.protobuf.CodedInputStream input,
							com.google.protobuf.ExtensionRegistryLite extensionRegistry)
							throws com.google.protobuf.InvalidProtocolBufferException {
						return new ValueMetric(input, extensionRegistry);
					}
				};

		static {
			defaultInstance = new ValueMetric(true);
			defaultInstance.initFields();
		}

		private final com.google.protobuf.UnknownFieldSet unknownFields;

		private int bitField0_;

		private java.lang.Object name_;

		private double value_;

		private java.lang.Object unit_;

		private byte memoizedIsInitialized = -1;

		private int memoizedSerializedSize = -1;

		// Use ValueMetric.newBuilder() to construct.
		private ValueMetric(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
			super(builder);
			this.unknownFields = builder.getUnknownFields();
		}

		private ValueMetric(boolean noInit) {
			this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance();
		}

		private ValueMetric(
				com.google.protobuf.CodedInputStream input,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws com.google.protobuf.InvalidProtocolBufferException {
			initFields();
			int mutable_bitField0_ = 0;
			com.google.protobuf.UnknownFieldSet.Builder unknownFields =
					com.google.protobuf.UnknownFieldSet.newBuilder();
			try {
				boolean done = false;
				while (!done) {
					int tag = input.readTag();
					switch (tag) {
						case 0:
							done = true;
							break;
						default: {
							if (!parseUnknownField(input, unknownFields,
									extensionRegistry, tag)) {
								done = true;
							}
							break;
						}
						case 10: {
							com.google.protobuf.ByteString bs = input.readBytes();
							bitField0_ |= 0x00000001;
							name_ = bs;
							break;
						}
						case 17: {
							bitField0_ |= 0x00000002;
							value_ = input.readDouble();
							break;
						}
						case 26: {
							com.google.protobuf.ByteString bs = input.readBytes();
							bitField0_ |= 0x00000004;
							unit_ = bs;
							break;
						}
					}
				}
			}
			catch (com.google.protobuf.InvalidProtocolBufferException e) {
				throw e.setUnfinishedMessage(this);
			}
			catch (java.io.IOException e) {
				throw new com.google.protobuf.InvalidProtocolBufferException(
						e.getMessage()).setUnfinishedMessage(this);
			}
			finally {
				this.unknownFields = unknownFields.build();
				makeExtensionsImmutable();
			}
		}

		public static ValueMetric getDefaultInstance() {
			return defaultInstance;
		}

		public static final com.google.protobuf.Descriptors.Descriptor
		getDescriptor() {
			return org.cloudfoundry.dropsonde.events.MetricFactory.internal_static_events_ValueMetric_descriptor;
		}

		public static org.cloudfoundry.dropsonde.events.MetricFactory.ValueMetric parseFrom(
				com.google.protobuf.ByteString data)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data);
		}

		public static org.cloudfoundry.dropsonde.events.MetricFactory.ValueMetric parseFrom(
				com.google.protobuf.ByteString data,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data, extensionRegistry);
		}

		public static org.cloudfoundry.dropsonde.events.MetricFactory.ValueMetric parseFrom(byte[] data)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data);
		}

		public static org.cloudfoundry.dropsonde.events.MetricFactory.ValueMetric parseFrom(
				byte[] data,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data, extensionRegistry);
		}

		public static org.cloudfoundry.dropsonde.events.MetricFactory.ValueMetric parseFrom(java.io.InputStream input)
				throws java.io.IOException {
			return PARSER.parseFrom(input);
		}

		public static org.cloudfoundry.dropsonde.events.MetricFactory.ValueMetric parseFrom(
				java.io.InputStream input,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws java.io.IOException {
			return PARSER.parseFrom(input, extensionRegistry);
		}

		public static org.cloudfoundry.dropsonde.events.MetricFactory.ValueMetric parseDelimitedFrom(java.io.InputStream input)
				throws java.io.IOException {
			return PARSER.parseDelimitedFrom(input);
		}

		public static org.cloudfoundry.dropsonde.events.MetricFactory.ValueMetric parseDelimitedFrom(
				java.io.InputStream input,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws java.io.IOException {
			return PARSER.parseDelimitedFrom(input, extensionRegistry);
		}

		public static org.cloudfoundry.dropsonde.events.MetricFactory.ValueMetric parseFrom(
				com.google.protobuf.CodedInputStream input)
				throws java.io.IOException {
			return PARSER.parseFrom(input);
		}

		public static org.cloudfoundry.dropsonde.events.MetricFactory.ValueMetric parseFrom(
				com.google.protobuf.CodedInputStream input,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws java.io.IOException {
			return PARSER.parseFrom(input, extensionRegistry);
		}

		public static Builder newBuilder() {
			return Builder.create();
		}

		public static Builder newBuilder(org.cloudfoundry.dropsonde.events.MetricFactory.ValueMetric prototype) {
			return newBuilder().mergeFrom(prototype);
		}

		public ValueMetric getDefaultInstanceForType() {
			return defaultInstance;
		}

		@java.lang.Override
		public final com.google.protobuf.UnknownFieldSet
		getUnknownFields() {
			return this.unknownFields;
		}

		protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
		internalGetFieldAccessorTable() {
			return org.cloudfoundry.dropsonde.events.MetricFactory.internal_static_events_ValueMetric_fieldAccessorTable
					.ensureFieldAccessorsInitialized(
							org.cloudfoundry.dropsonde.events.MetricFactory.ValueMetric.class, org.cloudfoundry.dropsonde.events.MetricFactory.ValueMetric.Builder.class);
		}

		@java.lang.Override
		public com.google.protobuf.Parser<ValueMetric> getParserForType() {
			return PARSER;
		}

		/**
		 * <code>required string name = 1;</code>
		 * <p>
		 * <pre>
		 * &#47; Name of the metric. Must be consistent for downstream consumers to associate events semantically.
		 * </pre>
		 */
		public boolean hasName() {
			return ((bitField0_ & 0x00000001) == 0x00000001);
		}

		/**
		 * <code>required string name = 1;</code>
		 * <p>
		 * <pre>
		 * &#47; Name of the metric. Must be consistent for downstream consumers to associate events semantically.
		 * </pre>
		 */
		public java.lang.String getName() {
			java.lang.Object ref = name_;
			if (ref instanceof java.lang.String) {
				return (java.lang.String) ref;
			}
			else {
				com.google.protobuf.ByteString bs =
						(com.google.protobuf.ByteString) ref;
				java.lang.String s = bs.toStringUtf8();
				if (bs.isValidUtf8()) {
					name_ = s;
				}
				return s;
			}
		}

		/**
		 * <code>required string name = 1;</code>
		 * <p>
		 * <pre>
		 * &#47; Name of the metric. Must be consistent for downstream consumers to associate events semantically.
		 * </pre>
		 */
		public com.google.protobuf.ByteString
		getNameBytes() {
			java.lang.Object ref = name_;
			if (ref instanceof java.lang.String) {
				com.google.protobuf.ByteString b =
						com.google.protobuf.ByteString.copyFromUtf8(
								(java.lang.String) ref);
				name_ = b;
				return b;
			}
			else {
				return (com.google.protobuf.ByteString) ref;
			}
		}

		/**
		 * <code>required double value = 2;</code>
		 * <p>
		 * <pre>
		 * &#47; Value at the time of event emission.
		 * </pre>
		 */
		public boolean hasValue() {
			return ((bitField0_ & 0x00000002) == 0x00000002);
		}

		/**
		 * <code>required double value = 2;</code>
		 * <p>
		 * <pre>
		 * &#47; Value at the time of event emission.
		 * </pre>
		 */
		public double getValue() {
			return value_;
		}

		/**
		 * <code>required string unit = 3;</code>
		 * <p>
		 * <pre>
		 * &#47; Unit of the metric. Please see http://metrics20.org/spec/#units for ideas; SI units/prefixes are recommended where applicable. Should be consistent for the life of the metric (consumers are expected to report, but not interpret, prefixes).
		 * </pre>
		 */
		public boolean hasUnit() {
			return ((bitField0_ & 0x00000004) == 0x00000004);
		}

		/**
		 * <code>required string unit = 3;</code>
		 * <p>
		 * <pre>
		 * &#47; Unit of the metric. Please see http://metrics20.org/spec/#units for ideas; SI units/prefixes are recommended where applicable. Should be consistent for the life of the metric (consumers are expected to report, but not interpret, prefixes).
		 * </pre>
		 */
		public java.lang.String getUnit() {
			java.lang.Object ref = unit_;
			if (ref instanceof java.lang.String) {
				return (java.lang.String) ref;
			}
			else {
				com.google.protobuf.ByteString bs =
						(com.google.protobuf.ByteString) ref;
				java.lang.String s = bs.toStringUtf8();
				if (bs.isValidUtf8()) {
					unit_ = s;
				}
				return s;
			}
		}

		/**
		 * <code>required string unit = 3;</code>
		 * <p>
		 * <pre>
		 * &#47; Unit of the metric. Please see http://metrics20.org/spec/#units for ideas; SI units/prefixes are recommended where applicable. Should be consistent for the life of the metric (consumers are expected to report, but not interpret, prefixes).
		 * </pre>
		 */
		public com.google.protobuf.ByteString
		getUnitBytes() {
			java.lang.Object ref = unit_;
			if (ref instanceof java.lang.String) {
				com.google.protobuf.ByteString b =
						com.google.protobuf.ByteString.copyFromUtf8(
								(java.lang.String) ref);
				unit_ = b;
				return b;
			}
			else {
				return (com.google.protobuf.ByteString) ref;
			}
		}

		private void initFields() {
			name_ = "";
			value_ = 0D;
			unit_ = "";
		}

		public final boolean isInitialized() {
			byte isInitialized = memoizedIsInitialized;
			if (isInitialized == 1) return true;
			if (isInitialized == 0) return false;

			if (!hasName()) {
				memoizedIsInitialized = 0;
				return false;
			}
			if (!hasValue()) {
				memoizedIsInitialized = 0;
				return false;
			}
			if (!hasUnit()) {
				memoizedIsInitialized = 0;
				return false;
			}
			memoizedIsInitialized = 1;
			return true;
		}

		public void writeTo(com.google.protobuf.CodedOutputStream output)
				throws java.io.IOException {
			getSerializedSize();
			if (((bitField0_ & 0x00000001) == 0x00000001)) {
				output.writeBytes(1, getNameBytes());
			}
			if (((bitField0_ & 0x00000002) == 0x00000002)) {
				output.writeDouble(2, value_);
			}
			if (((bitField0_ & 0x00000004) == 0x00000004)) {
				output.writeBytes(3, getUnitBytes());
			}
			getUnknownFields().writeTo(output);
		}

		public int getSerializedSize() {
			int size = memoizedSerializedSize;
			if (size != -1) return size;

			size = 0;
			if (((bitField0_ & 0x00000001) == 0x00000001)) {
				size += com.google.protobuf.CodedOutputStream
						.computeBytesSize(1, getNameBytes());
			}
			if (((bitField0_ & 0x00000002) == 0x00000002)) {
				size += com.google.protobuf.CodedOutputStream
						.computeDoubleSize(2, value_);
			}
			if (((bitField0_ & 0x00000004) == 0x00000004)) {
				size += com.google.protobuf.CodedOutputStream
						.computeBytesSize(3, getUnitBytes());
			}
			size += getUnknownFields().getSerializedSize();
			memoizedSerializedSize = size;
			return size;
		}

		@java.lang.Override
		protected java.lang.Object writeReplace()
				throws java.io.ObjectStreamException {
			return super.writeReplace();
		}

		public Builder newBuilderForType() {
			return newBuilder();
		}

		public Builder toBuilder() {
			return newBuilder(this);
		}

		@java.lang.Override
		protected Builder newBuilderForType(
				com.google.protobuf.GeneratedMessage.BuilderParent parent) {
			Builder builder = new Builder(parent);
			return builder;
		}

		/**
		 * Protobuf type {@code events.ValueMetric}
		 * <p>
		 * <pre>
		 * &#47; A ValueMetric indicates the value of a metric at an instant in time.
		 * </pre>
		 */
		public static final class Builder extends
				com.google.protobuf.GeneratedMessage.Builder<Builder> implements
				// @@protoc_insertion_point(builder_implements:events.ValueMetric)
				org.cloudfoundry.dropsonde.events.MetricFactory.ValueMetricOrBuilder {
			private int bitField0_;

			private java.lang.Object name_ = "";

			private double value_;

			private java.lang.Object unit_ = "";

			// Construct using org.cloudfoundry.dropsonde.events.MetricFactory.ValueMetric.newBuilder()
			private Builder() {
				maybeForceBuilderInitialization();
			}

			private Builder(
					com.google.protobuf.GeneratedMessage.BuilderParent parent) {
				super(parent);
				maybeForceBuilderInitialization();
			}

			public static final com.google.protobuf.Descriptors.Descriptor
			getDescriptor() {
				return org.cloudfoundry.dropsonde.events.MetricFactory.internal_static_events_ValueMetric_descriptor;
			}

			private static Builder create() {
				return new Builder();
			}

			protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
			internalGetFieldAccessorTable() {
				return org.cloudfoundry.dropsonde.events.MetricFactory.internal_static_events_ValueMetric_fieldAccessorTable
						.ensureFieldAccessorsInitialized(
								org.cloudfoundry.dropsonde.events.MetricFactory.ValueMetric.class, org.cloudfoundry.dropsonde.events.MetricFactory.ValueMetric.Builder.class);
			}

			private void maybeForceBuilderInitialization() {
				if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
				}
			}

			public Builder clear() {
				super.clear();
				name_ = "";
				bitField0_ = (bitField0_ & ~0x00000001);
				value_ = 0D;
				bitField0_ = (bitField0_ & ~0x00000002);
				unit_ = "";
				bitField0_ = (bitField0_ & ~0x00000004);
				return this;
			}

			public Builder clone() {
				return create().mergeFrom(buildPartial());
			}

			public com.google.protobuf.Descriptors.Descriptor
			getDescriptorForType() {
				return org.cloudfoundry.dropsonde.events.MetricFactory.internal_static_events_ValueMetric_descriptor;
			}

			public org.cloudfoundry.dropsonde.events.MetricFactory.ValueMetric getDefaultInstanceForType() {
				return org.cloudfoundry.dropsonde.events.MetricFactory.ValueMetric.getDefaultInstance();
			}

			public org.cloudfoundry.dropsonde.events.MetricFactory.ValueMetric build() {
				org.cloudfoundry.dropsonde.events.MetricFactory.ValueMetric result = buildPartial();
				if (!result.isInitialized()) {
					throw newUninitializedMessageException(result);
				}
				return result;
			}

			public org.cloudfoundry.dropsonde.events.MetricFactory.ValueMetric buildPartial() {
				org.cloudfoundry.dropsonde.events.MetricFactory.ValueMetric result = new org.cloudfoundry.dropsonde.events.MetricFactory.ValueMetric(this);
				int from_bitField0_ = bitField0_;
				int to_bitField0_ = 0;
				if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
					to_bitField0_ |= 0x00000001;
				}
				result.name_ = name_;
				if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
					to_bitField0_ |= 0x00000002;
				}
				result.value_ = value_;
				if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
					to_bitField0_ |= 0x00000004;
				}
				result.unit_ = unit_;
				result.bitField0_ = to_bitField0_;
				onBuilt();
				return result;
			}

			public Builder mergeFrom(com.google.protobuf.Message other) {
				if (other instanceof org.cloudfoundry.dropsonde.events.MetricFactory.ValueMetric) {
					return mergeFrom((org.cloudfoundry.dropsonde.events.MetricFactory.ValueMetric) other);
				}
				else {
					super.mergeFrom(other);
					return this;
				}
			}

			public Builder mergeFrom(org.cloudfoundry.dropsonde.events.MetricFactory.ValueMetric other) {
				if (other == org.cloudfoundry.dropsonde.events.MetricFactory.ValueMetric.getDefaultInstance())
					return this;
				if (other.hasName()) {
					bitField0_ |= 0x00000001;
					name_ = other.name_;
					onChanged();
				}
				if (other.hasValue()) {
					setValue(other.getValue());
				}
				if (other.hasUnit()) {
					bitField0_ |= 0x00000004;
					unit_ = other.unit_;
					onChanged();
				}
				this.mergeUnknownFields(other.getUnknownFields());
				return this;
			}

			public final boolean isInitialized() {
				if (!hasName()) {

					return false;
				}
				if (!hasValue()) {

					return false;
				}
				if (!hasUnit()) {

					return false;
				}
				return true;
			}

			public Builder mergeFrom(
					com.google.protobuf.CodedInputStream input,
					com.google.protobuf.ExtensionRegistryLite extensionRegistry)
					throws java.io.IOException {
				org.cloudfoundry.dropsonde.events.MetricFactory.ValueMetric parsedMessage = null;
				try {
					parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
				}
				catch (com.google.protobuf.InvalidProtocolBufferException e) {
					parsedMessage = (org.cloudfoundry.dropsonde.events.MetricFactory.ValueMetric) e.getUnfinishedMessage();
					throw e;
				}
				finally {
					if (parsedMessage != null) {
						mergeFrom(parsedMessage);
					}
				}
				return this;
			}

			/**
			 * <code>required string name = 1;</code>
			 * <p>
			 * <pre>
			 * &#47; Name of the metric. Must be consistent for downstream consumers to associate events semantically.
			 * </pre>
			 */
			public boolean hasName() {
				return ((bitField0_ & 0x00000001) == 0x00000001);
			}

			/**
			 * <code>required string name = 1;</code>
			 * <p>
			 * <pre>
			 * &#47; Name of the metric. Must be consistent for downstream consumers to associate events semantically.
			 * </pre>
			 */
			public java.lang.String getName() {
				java.lang.Object ref = name_;
				if (!(ref instanceof java.lang.String)) {
					com.google.protobuf.ByteString bs =
							(com.google.protobuf.ByteString) ref;
					java.lang.String s = bs.toStringUtf8();
					if (bs.isValidUtf8()) {
						name_ = s;
					}
					return s;
				}
				else {
					return (java.lang.String) ref;
				}
			}

			/**
			 * <code>required string name = 1;</code>
			 * <p>
			 * <pre>
			 * &#47; Name of the metric. Must be consistent for downstream consumers to associate events semantically.
			 * </pre>
			 */
			public Builder setName(
					java.lang.String value) {
				if (value == null) {
					throw new NullPointerException();
				}
				bitField0_ |= 0x00000001;
				name_ = value;
				onChanged();
				return this;
			}

			/**
			 * <code>required string name = 1;</code>
			 * <p>
			 * <pre>
			 * &#47; Name of the metric. Must be consistent for downstream consumers to associate events semantically.
			 * </pre>
			 */
			public com.google.protobuf.ByteString
			getNameBytes() {
				java.lang.Object ref = name_;
				if (ref instanceof String) {
					com.google.protobuf.ByteString b =
							com.google.protobuf.ByteString.copyFromUtf8(
									(java.lang.String) ref);
					name_ = b;
					return b;
				}
				else {
					return (com.google.protobuf.ByteString) ref;
				}
			}

			/**
			 * <code>required string name = 1;</code>
			 * <p>
			 * <pre>
			 * &#47; Name of the metric. Must be consistent for downstream consumers to associate events semantically.
			 * </pre>
			 */
			public Builder setNameBytes(
					com.google.protobuf.ByteString value) {
				if (value == null) {
					throw new NullPointerException();
				}
				bitField0_ |= 0x00000001;
				name_ = value;
				onChanged();
				return this;
			}

			/**
			 * <code>required string name = 1;</code>
			 * <p>
			 * <pre>
			 * &#47; Name of the metric. Must be consistent for downstream consumers to associate events semantically.
			 * </pre>
			 */
			public Builder clearName() {
				bitField0_ = (bitField0_ & ~0x00000001);
				name_ = getDefaultInstance().getName();
				onChanged();
				return this;
			}

			/**
			 * <code>required double value = 2;</code>
			 * <p>
			 * <pre>
			 * &#47; Value at the time of event emission.
			 * </pre>
			 */
			public boolean hasValue() {
				return ((bitField0_ & 0x00000002) == 0x00000002);
			}

			/**
			 * <code>required double value = 2;</code>
			 * <p>
			 * <pre>
			 * &#47; Value at the time of event emission.
			 * </pre>
			 */
			public double getValue() {
				return value_;
			}

			/**
			 * <code>required double value = 2;</code>
			 * <p>
			 * <pre>
			 * &#47; Value at the time of event emission.
			 * </pre>
			 */
			public Builder setValue(double value) {
				bitField0_ |= 0x00000002;
				value_ = value;
				onChanged();
				return this;
			}

			/**
			 * <code>required double value = 2;</code>
			 * <p>
			 * <pre>
			 * &#47; Value at the time of event emission.
			 * </pre>
			 */
			public Builder clearValue() {
				bitField0_ = (bitField0_ & ~0x00000002);
				value_ = 0D;
				onChanged();
				return this;
			}

			/**
			 * <code>required string unit = 3;</code>
			 * <p>
			 * <pre>
			 * &#47; Unit of the metric. Please see http://metrics20.org/spec/#units for ideas; SI units/prefixes are recommended where applicable. Should be consistent for the life of the metric (consumers are expected to report, but not interpret, prefixes).
			 * </pre>
			 */
			public boolean hasUnit() {
				return ((bitField0_ & 0x00000004) == 0x00000004);
			}

			/**
			 * <code>required string unit = 3;</code>
			 * <p>
			 * <pre>
			 * &#47; Unit of the metric. Please see http://metrics20.org/spec/#units for ideas; SI units/prefixes are recommended where applicable. Should be consistent for the life of the metric (consumers are expected to report, but not interpret, prefixes).
			 * </pre>
			 */
			public java.lang.String getUnit() {
				java.lang.Object ref = unit_;
				if (!(ref instanceof java.lang.String)) {
					com.google.protobuf.ByteString bs =
							(com.google.protobuf.ByteString) ref;
					java.lang.String s = bs.toStringUtf8();
					if (bs.isValidUtf8()) {
						unit_ = s;
					}
					return s;
				}
				else {
					return (java.lang.String) ref;
				}
			}

			/**
			 * <code>required string unit = 3;</code>
			 * <p>
			 * <pre>
			 * &#47; Unit of the metric. Please see http://metrics20.org/spec/#units for ideas; SI units/prefixes are recommended where applicable. Should be consistent for the life of the metric (consumers are expected to report, but not interpret, prefixes).
			 * </pre>
			 */
			public Builder setUnit(
					java.lang.String value) {
				if (value == null) {
					throw new NullPointerException();
				}
				bitField0_ |= 0x00000004;
				unit_ = value;
				onChanged();
				return this;
			}

			/**
			 * <code>required string unit = 3;</code>
			 * <p>
			 * <pre>
			 * &#47; Unit of the metric. Please see http://metrics20.org/spec/#units for ideas; SI units/prefixes are recommended where applicable. Should be consistent for the life of the metric (consumers are expected to report, but not interpret, prefixes).
			 * </pre>
			 */
			public com.google.protobuf.ByteString
			getUnitBytes() {
				java.lang.Object ref = unit_;
				if (ref instanceof String) {
					com.google.protobuf.ByteString b =
							com.google.protobuf.ByteString.copyFromUtf8(
									(java.lang.String) ref);
					unit_ = b;
					return b;
				}
				else {
					return (com.google.protobuf.ByteString) ref;
				}
			}

			/**
			 * <code>required string unit = 3;</code>
			 * <p>
			 * <pre>
			 * &#47; Unit of the metric. Please see http://metrics20.org/spec/#units for ideas; SI units/prefixes are recommended where applicable. Should be consistent for the life of the metric (consumers are expected to report, but not interpret, prefixes).
			 * </pre>
			 */
			public Builder setUnitBytes(
					com.google.protobuf.ByteString value) {
				if (value == null) {
					throw new NullPointerException();
				}
				bitField0_ |= 0x00000004;
				unit_ = value;
				onChanged();
				return this;
			}

			/**
			 * <code>required string unit = 3;</code>
			 * <p>
			 * <pre>
			 * &#47; Unit of the metric. Please see http://metrics20.org/spec/#units for ideas; SI units/prefixes are recommended where applicable. Should be consistent for the life of the metric (consumers are expected to report, but not interpret, prefixes).
			 * </pre>
			 */
			public Builder clearUnit() {
				bitField0_ = (bitField0_ & ~0x00000004);
				unit_ = getDefaultInstance().getUnit();
				onChanged();
				return this;
			}

			// @@protoc_insertion_point(builder_scope:events.ValueMetric)
		}

		// @@protoc_insertion_point(class_scope:events.ValueMetric)
	}

	/**
	 * Protobuf type {@code events.CounterEvent}
	 * <p>
	 * <pre>
	 * &#47; A CounterEvent represents the increment of a counter. It contains only the change in the value; it is the responsibility of downstream consumers to maintain the value of the counter.
	 * </pre>
	 */
	public static final class CounterEvent extends
			com.google.protobuf.GeneratedMessage implements
			// @@protoc_insertion_point(message_implements:events.CounterEvent)
			CounterEventOrBuilder {
		public static final int NAME_FIELD_NUMBER = 1;

		public static final int DELTA_FIELD_NUMBER = 2;

		public static final int TOTAL_FIELD_NUMBER = 3;

		private static final CounterEvent defaultInstance;

		private static final long serialVersionUID = 0L;

		public static com.google.protobuf.Parser<CounterEvent> PARSER =
				new com.google.protobuf.AbstractParser<CounterEvent>() {
					public CounterEvent parsePartialFrom(
							com.google.protobuf.CodedInputStream input,
							com.google.protobuf.ExtensionRegistryLite extensionRegistry)
							throws com.google.protobuf.InvalidProtocolBufferException {
						return new CounterEvent(input, extensionRegistry);
					}
				};

		static {
			defaultInstance = new CounterEvent(true);
			defaultInstance.initFields();
		}

		private final com.google.protobuf.UnknownFieldSet unknownFields;

		private int bitField0_;

		private java.lang.Object name_;

		private long delta_;

		private long total_;

		private byte memoizedIsInitialized = -1;

		private int memoizedSerializedSize = -1;

		// Use CounterEvent.newBuilder() to construct.
		private CounterEvent(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
			super(builder);
			this.unknownFields = builder.getUnknownFields();
		}

		private CounterEvent(boolean noInit) {
			this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance();
		}

		private CounterEvent(
				com.google.protobuf.CodedInputStream input,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws com.google.protobuf.InvalidProtocolBufferException {
			initFields();
			int mutable_bitField0_ = 0;
			com.google.protobuf.UnknownFieldSet.Builder unknownFields =
					com.google.protobuf.UnknownFieldSet.newBuilder();
			try {
				boolean done = false;
				while (!done) {
					int tag = input.readTag();
					switch (tag) {
						case 0:
							done = true;
							break;
						default: {
							if (!parseUnknownField(input, unknownFields,
									extensionRegistry, tag)) {
								done = true;
							}
							break;
						}
						case 10: {
							com.google.protobuf.ByteString bs = input.readBytes();
							bitField0_ |= 0x00000001;
							name_ = bs;
							break;
						}
						case 16: {
							bitField0_ |= 0x00000002;
							delta_ = input.readUInt64();
							break;
						}
						case 24: {
							bitField0_ |= 0x00000004;
							total_ = input.readUInt64();
							break;
						}
					}
				}
			}
			catch (com.google.protobuf.InvalidProtocolBufferException e) {
				throw e.setUnfinishedMessage(this);
			}
			catch (java.io.IOException e) {
				throw new com.google.protobuf.InvalidProtocolBufferException(
						e.getMessage()).setUnfinishedMessage(this);
			}
			finally {
				this.unknownFields = unknownFields.build();
				makeExtensionsImmutable();
			}
		}

		public static CounterEvent getDefaultInstance() {
			return defaultInstance;
		}

		public static final com.google.protobuf.Descriptors.Descriptor
		getDescriptor() {
			return org.cloudfoundry.dropsonde.events.MetricFactory.internal_static_events_CounterEvent_descriptor;
		}

		public static org.cloudfoundry.dropsonde.events.MetricFactory.CounterEvent parseFrom(
				com.google.protobuf.ByteString data)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data);
		}

		public static org.cloudfoundry.dropsonde.events.MetricFactory.CounterEvent parseFrom(
				com.google.protobuf.ByteString data,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data, extensionRegistry);
		}

		public static org.cloudfoundry.dropsonde.events.MetricFactory.CounterEvent parseFrom(byte[] data)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data);
		}

		public static org.cloudfoundry.dropsonde.events.MetricFactory.CounterEvent parseFrom(
				byte[] data,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data, extensionRegistry);
		}

		public static org.cloudfoundry.dropsonde.events.MetricFactory.CounterEvent parseFrom(java.io.InputStream input)
				throws java.io.IOException {
			return PARSER.parseFrom(input);
		}

		public static org.cloudfoundry.dropsonde.events.MetricFactory.CounterEvent parseFrom(
				java.io.InputStream input,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws java.io.IOException {
			return PARSER.parseFrom(input, extensionRegistry);
		}

		public static org.cloudfoundry.dropsonde.events.MetricFactory.CounterEvent parseDelimitedFrom(java.io.InputStream input)
				throws java.io.IOException {
			return PARSER.parseDelimitedFrom(input);
		}

		public static org.cloudfoundry.dropsonde.events.MetricFactory.CounterEvent parseDelimitedFrom(
				java.io.InputStream input,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws java.io.IOException {
			return PARSER.parseDelimitedFrom(input, extensionRegistry);
		}

		public static org.cloudfoundry.dropsonde.events.MetricFactory.CounterEvent parseFrom(
				com.google.protobuf.CodedInputStream input)
				throws java.io.IOException {
			return PARSER.parseFrom(input);
		}

		public static org.cloudfoundry.dropsonde.events.MetricFactory.CounterEvent parseFrom(
				com.google.protobuf.CodedInputStream input,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws java.io.IOException {
			return PARSER.parseFrom(input, extensionRegistry);
		}

		public static Builder newBuilder() {
			return Builder.create();
		}

		public static Builder newBuilder(org.cloudfoundry.dropsonde.events.MetricFactory.CounterEvent prototype) {
			return newBuilder().mergeFrom(prototype);
		}

		public CounterEvent getDefaultInstanceForType() {
			return defaultInstance;
		}

		@java.lang.Override
		public final com.google.protobuf.UnknownFieldSet
		getUnknownFields() {
			return this.unknownFields;
		}

		protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
		internalGetFieldAccessorTable() {
			return org.cloudfoundry.dropsonde.events.MetricFactory.internal_static_events_CounterEvent_fieldAccessorTable
					.ensureFieldAccessorsInitialized(
							org.cloudfoundry.dropsonde.events.MetricFactory.CounterEvent.class, org.cloudfoundry.dropsonde.events.MetricFactory.CounterEvent.Builder.class);
		}

		@java.lang.Override
		public com.google.protobuf.Parser<CounterEvent> getParserForType() {
			return PARSER;
		}

		/**
		 * <code>required string name = 1;</code>
		 * <p>
		 * <pre>
		 * &#47; Name of the counter. Must be consistent for downstream consumers to associate events semantically.
		 * </pre>
		 */
		public boolean hasName() {
			return ((bitField0_ & 0x00000001) == 0x00000001);
		}

		/**
		 * <code>required string name = 1;</code>
		 * <p>
		 * <pre>
		 * &#47; Name of the counter. Must be consistent for downstream consumers to associate events semantically.
		 * </pre>
		 */
		public java.lang.String getName() {
			java.lang.Object ref = name_;
			if (ref instanceof java.lang.String) {
				return (java.lang.String) ref;
			}
			else {
				com.google.protobuf.ByteString bs =
						(com.google.protobuf.ByteString) ref;
				java.lang.String s = bs.toStringUtf8();
				if (bs.isValidUtf8()) {
					name_ = s;
				}
				return s;
			}
		}

		/**
		 * <code>required string name = 1;</code>
		 * <p>
		 * <pre>
		 * &#47; Name of the counter. Must be consistent for downstream consumers to associate events semantically.
		 * </pre>
		 */
		public com.google.protobuf.ByteString
		getNameBytes() {
			java.lang.Object ref = name_;
			if (ref instanceof java.lang.String) {
				com.google.protobuf.ByteString b =
						com.google.protobuf.ByteString.copyFromUtf8(
								(java.lang.String) ref);
				name_ = b;
				return b;
			}
			else {
				return (com.google.protobuf.ByteString) ref;
			}
		}

		/**
		 * <code>required uint64 delta = 2;</code>
		 * <p>
		 * <pre>
		 * &#47; Amount by which to increment the counter.
		 * </pre>
		 */
		public boolean hasDelta() {
			return ((bitField0_ & 0x00000002) == 0x00000002);
		}

		/**
		 * <code>required uint64 delta = 2;</code>
		 * <p>
		 * <pre>
		 * &#47; Amount by which to increment the counter.
		 * </pre>
		 */
		public long getDelta() {
			return delta_;
		}

		/**
		 * <code>optional uint64 total = 3;</code>
		 * <p>
		 * <pre>
		 * &#47; Total value of the counter. This will be overridden by Metron, which internally tracks the total of each named Counter it receives.
		 * </pre>
		 */
		public boolean hasTotal() {
			return ((bitField0_ & 0x00000004) == 0x00000004);
		}

		/**
		 * <code>optional uint64 total = 3;</code>
		 * <p>
		 * <pre>
		 * &#47; Total value of the counter. This will be overridden by Metron, which internally tracks the total of each named Counter it receives.
		 * </pre>
		 */
		public long getTotal() {
			return total_;
		}

		private void initFields() {
			name_ = "";
			delta_ = 0L;
			total_ = 0L;
		}

		public final boolean isInitialized() {
			byte isInitialized = memoizedIsInitialized;
			if (isInitialized == 1) return true;
			if (isInitialized == 0) return false;

			if (!hasName()) {
				memoizedIsInitialized = 0;
				return false;
			}
			if (!hasDelta()) {
				memoizedIsInitialized = 0;
				return false;
			}
			memoizedIsInitialized = 1;
			return true;
		}

		public void writeTo(com.google.protobuf.CodedOutputStream output)
				throws java.io.IOException {
			getSerializedSize();
			if (((bitField0_ & 0x00000001) == 0x00000001)) {
				output.writeBytes(1, getNameBytes());
			}
			if (((bitField0_ & 0x00000002) == 0x00000002)) {
				output.writeUInt64(2, delta_);
			}
			if (((bitField0_ & 0x00000004) == 0x00000004)) {
				output.writeUInt64(3, total_);
			}
			getUnknownFields().writeTo(output);
		}

		public int getSerializedSize() {
			int size = memoizedSerializedSize;
			if (size != -1) return size;

			size = 0;
			if (((bitField0_ & 0x00000001) == 0x00000001)) {
				size += com.google.protobuf.CodedOutputStream
						.computeBytesSize(1, getNameBytes());
			}
			if (((bitField0_ & 0x00000002) == 0x00000002)) {
				size += com.google.protobuf.CodedOutputStream
						.computeUInt64Size(2, delta_);
			}
			if (((bitField0_ & 0x00000004) == 0x00000004)) {
				size += com.google.protobuf.CodedOutputStream
						.computeUInt64Size(3, total_);
			}
			size += getUnknownFields().getSerializedSize();
			memoizedSerializedSize = size;
			return size;
		}

		@java.lang.Override
		protected java.lang.Object writeReplace()
				throws java.io.ObjectStreamException {
			return super.writeReplace();
		}

		public Builder newBuilderForType() {
			return newBuilder();
		}

		public Builder toBuilder() {
			return newBuilder(this);
		}

		@java.lang.Override
		protected Builder newBuilderForType(
				com.google.protobuf.GeneratedMessage.BuilderParent parent) {
			Builder builder = new Builder(parent);
			return builder;
		}

		/**
		 * Protobuf type {@code events.CounterEvent}
		 * <p>
		 * <pre>
		 * &#47; A CounterEvent represents the increment of a counter. It contains only the change in the value; it is the responsibility of downstream consumers to maintain the value of the counter.
		 * </pre>
		 */
		public static final class Builder extends
				com.google.protobuf.GeneratedMessage.Builder<Builder> implements
				// @@protoc_insertion_point(builder_implements:events.CounterEvent)
				org.cloudfoundry.dropsonde.events.MetricFactory.CounterEventOrBuilder {
			private int bitField0_;

			private java.lang.Object name_ = "";

			private long delta_;

			private long total_;

			// Construct using org.cloudfoundry.dropsonde.events.MetricFactory.CounterEvent.newBuilder()
			private Builder() {
				maybeForceBuilderInitialization();
			}

			private Builder(
					com.google.protobuf.GeneratedMessage.BuilderParent parent) {
				super(parent);
				maybeForceBuilderInitialization();
			}

			public static final com.google.protobuf.Descriptors.Descriptor
			getDescriptor() {
				return org.cloudfoundry.dropsonde.events.MetricFactory.internal_static_events_CounterEvent_descriptor;
			}

			private static Builder create() {
				return new Builder();
			}

			protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
			internalGetFieldAccessorTable() {
				return org.cloudfoundry.dropsonde.events.MetricFactory.internal_static_events_CounterEvent_fieldAccessorTable
						.ensureFieldAccessorsInitialized(
								org.cloudfoundry.dropsonde.events.MetricFactory.CounterEvent.class, org.cloudfoundry.dropsonde.events.MetricFactory.CounterEvent.Builder.class);
			}

			private void maybeForceBuilderInitialization() {
				if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
				}
			}

			public Builder clear() {
				super.clear();
				name_ = "";
				bitField0_ = (bitField0_ & ~0x00000001);
				delta_ = 0L;
				bitField0_ = (bitField0_ & ~0x00000002);
				total_ = 0L;
				bitField0_ = (bitField0_ & ~0x00000004);
				return this;
			}

			public Builder clone() {
				return create().mergeFrom(buildPartial());
			}

			public com.google.protobuf.Descriptors.Descriptor
			getDescriptorForType() {
				return org.cloudfoundry.dropsonde.events.MetricFactory.internal_static_events_CounterEvent_descriptor;
			}

			public org.cloudfoundry.dropsonde.events.MetricFactory.CounterEvent getDefaultInstanceForType() {
				return org.cloudfoundry.dropsonde.events.MetricFactory.CounterEvent.getDefaultInstance();
			}

			public org.cloudfoundry.dropsonde.events.MetricFactory.CounterEvent build() {
				org.cloudfoundry.dropsonde.events.MetricFactory.CounterEvent result = buildPartial();
				if (!result.isInitialized()) {
					throw newUninitializedMessageException(result);
				}
				return result;
			}

			public org.cloudfoundry.dropsonde.events.MetricFactory.CounterEvent buildPartial() {
				org.cloudfoundry.dropsonde.events.MetricFactory.CounterEvent result = new org.cloudfoundry.dropsonde.events.MetricFactory.CounterEvent(this);
				int from_bitField0_ = bitField0_;
				int to_bitField0_ = 0;
				if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
					to_bitField0_ |= 0x00000001;
				}
				result.name_ = name_;
				if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
					to_bitField0_ |= 0x00000002;
				}
				result.delta_ = delta_;
				if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
					to_bitField0_ |= 0x00000004;
				}
				result.total_ = total_;
				result.bitField0_ = to_bitField0_;
				onBuilt();
				return result;
			}

			public Builder mergeFrom(com.google.protobuf.Message other) {
				if (other instanceof org.cloudfoundry.dropsonde.events.MetricFactory.CounterEvent) {
					return mergeFrom((org.cloudfoundry.dropsonde.events.MetricFactory.CounterEvent) other);
				}
				else {
					super.mergeFrom(other);
					return this;
				}
			}

			public Builder mergeFrom(org.cloudfoundry.dropsonde.events.MetricFactory.CounterEvent other) {
				if (other == org.cloudfoundry.dropsonde.events.MetricFactory.CounterEvent.getDefaultInstance())
					return this;
				if (other.hasName()) {
					bitField0_ |= 0x00000001;
					name_ = other.name_;
					onChanged();
				}
				if (other.hasDelta()) {
					setDelta(other.getDelta());
				}
				if (other.hasTotal()) {
					setTotal(other.getTotal());
				}
				this.mergeUnknownFields(other.getUnknownFields());
				return this;
			}

			public final boolean isInitialized() {
				if (!hasName()) {

					return false;
				}
				if (!hasDelta()) {

					return false;
				}
				return true;
			}

			public Builder mergeFrom(
					com.google.protobuf.CodedInputStream input,
					com.google.protobuf.ExtensionRegistryLite extensionRegistry)
					throws java.io.IOException {
				org.cloudfoundry.dropsonde.events.MetricFactory.CounterEvent parsedMessage = null;
				try {
					parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
				}
				catch (com.google.protobuf.InvalidProtocolBufferException e) {
					parsedMessage = (org.cloudfoundry.dropsonde.events.MetricFactory.CounterEvent) e.getUnfinishedMessage();
					throw e;
				}
				finally {
					if (parsedMessage != null) {
						mergeFrom(parsedMessage);
					}
				}
				return this;
			}

			/**
			 * <code>required string name = 1;</code>
			 * <p>
			 * <pre>
			 * &#47; Name of the counter. Must be consistent for downstream consumers to associate events semantically.
			 * </pre>
			 */
			public boolean hasName() {
				return ((bitField0_ & 0x00000001) == 0x00000001);
			}

			/**
			 * <code>required string name = 1;</code>
			 * <p>
			 * <pre>
			 * &#47; Name of the counter. Must be consistent for downstream consumers to associate events semantically.
			 * </pre>
			 */
			public java.lang.String getName() {
				java.lang.Object ref = name_;
				if (!(ref instanceof java.lang.String)) {
					com.google.protobuf.ByteString bs =
							(com.google.protobuf.ByteString) ref;
					java.lang.String s = bs.toStringUtf8();
					if (bs.isValidUtf8()) {
						name_ = s;
					}
					return s;
				}
				else {
					return (java.lang.String) ref;
				}
			}

			/**
			 * <code>required string name = 1;</code>
			 * <p>
			 * <pre>
			 * &#47; Name of the counter. Must be consistent for downstream consumers to associate events semantically.
			 * </pre>
			 */
			public Builder setName(
					java.lang.String value) {
				if (value == null) {
					throw new NullPointerException();
				}
				bitField0_ |= 0x00000001;
				name_ = value;
				onChanged();
				return this;
			}

			/**
			 * <code>required string name = 1;</code>
			 * <p>
			 * <pre>
			 * &#47; Name of the counter. Must be consistent for downstream consumers to associate events semantically.
			 * </pre>
			 */
			public com.google.protobuf.ByteString
			getNameBytes() {
				java.lang.Object ref = name_;
				if (ref instanceof String) {
					com.google.protobuf.ByteString b =
							com.google.protobuf.ByteString.copyFromUtf8(
									(java.lang.String) ref);
					name_ = b;
					return b;
				}
				else {
					return (com.google.protobuf.ByteString) ref;
				}
			}

			/**
			 * <code>required string name = 1;</code>
			 * <p>
			 * <pre>
			 * &#47; Name of the counter. Must be consistent for downstream consumers to associate events semantically.
			 * </pre>
			 */
			public Builder setNameBytes(
					com.google.protobuf.ByteString value) {
				if (value == null) {
					throw new NullPointerException();
				}
				bitField0_ |= 0x00000001;
				name_ = value;
				onChanged();
				return this;
			}

			/**
			 * <code>required string name = 1;</code>
			 * <p>
			 * <pre>
			 * &#47; Name of the counter. Must be consistent for downstream consumers to associate events semantically.
			 * </pre>
			 */
			public Builder clearName() {
				bitField0_ = (bitField0_ & ~0x00000001);
				name_ = getDefaultInstance().getName();
				onChanged();
				return this;
			}

			/**
			 * <code>required uint64 delta = 2;</code>
			 * <p>
			 * <pre>
			 * &#47; Amount by which to increment the counter.
			 * </pre>
			 */
			public boolean hasDelta() {
				return ((bitField0_ & 0x00000002) == 0x00000002);
			}

			/**
			 * <code>required uint64 delta = 2;</code>
			 * <p>
			 * <pre>
			 * &#47; Amount by which to increment the counter.
			 * </pre>
			 */
			public long getDelta() {
				return delta_;
			}

			/**
			 * <code>required uint64 delta = 2;</code>
			 * <p>
			 * <pre>
			 * &#47; Amount by which to increment the counter.
			 * </pre>
			 */
			public Builder setDelta(long value) {
				bitField0_ |= 0x00000002;
				delta_ = value;
				onChanged();
				return this;
			}

			/**
			 * <code>required uint64 delta = 2;</code>
			 * <p>
			 * <pre>
			 * &#47; Amount by which to increment the counter.
			 * </pre>
			 */
			public Builder clearDelta() {
				bitField0_ = (bitField0_ & ~0x00000002);
				delta_ = 0L;
				onChanged();
				return this;
			}

			/**
			 * <code>optional uint64 total = 3;</code>
			 * <p>
			 * <pre>
			 * &#47; Total value of the counter. This will be overridden by Metron, which internally tracks the total of each named Counter it receives.
			 * </pre>
			 */
			public boolean hasTotal() {
				return ((bitField0_ & 0x00000004) == 0x00000004);
			}

			/**
			 * <code>optional uint64 total = 3;</code>
			 * <p>
			 * <pre>
			 * &#47; Total value of the counter. This will be overridden by Metron, which internally tracks the total of each named Counter it receives.
			 * </pre>
			 */
			public long getTotal() {
				return total_;
			}

			/**
			 * <code>optional uint64 total = 3;</code>
			 * <p>
			 * <pre>
			 * &#47; Total value of the counter. This will be overridden by Metron, which internally tracks the total of each named Counter it receives.
			 * </pre>
			 */
			public Builder setTotal(long value) {
				bitField0_ |= 0x00000004;
				total_ = value;
				onChanged();
				return this;
			}

			/**
			 * <code>optional uint64 total = 3;</code>
			 * <p>
			 * <pre>
			 * &#47; Total value of the counter. This will be overridden by Metron, which internally tracks the total of each named Counter it receives.
			 * </pre>
			 */
			public Builder clearTotal() {
				bitField0_ = (bitField0_ & ~0x00000004);
				total_ = 0L;
				onChanged();
				return this;
			}

			// @@protoc_insertion_point(builder_scope:events.CounterEvent)
		}

		// @@protoc_insertion_point(class_scope:events.CounterEvent)
	}

	/**
	 * Protobuf type {@code events.ContainerMetric}
	 * <p>
	 * <pre>
	 * &#47; A ContainerMetric records resource usage of an app in a container.
	 * </pre>
	 */
	public static final class ContainerMetric extends
			com.google.protobuf.GeneratedMessage implements
			// @@protoc_insertion_point(message_implements:events.ContainerMetric)
			ContainerMetricOrBuilder {
		public static final int APPLICATIONID_FIELD_NUMBER = 1;

		public static final int INSTANCEINDEX_FIELD_NUMBER = 2;

		public static final int CPUPERCENTAGE_FIELD_NUMBER = 3;

		public static final int MEMORYBYTES_FIELD_NUMBER = 4;

		public static final int DISKBYTES_FIELD_NUMBER = 5;

		private static final ContainerMetric defaultInstance;

		private static final long serialVersionUID = 0L;

		public static com.google.protobuf.Parser<ContainerMetric> PARSER =
				new com.google.protobuf.AbstractParser<ContainerMetric>() {
					public ContainerMetric parsePartialFrom(
							com.google.protobuf.CodedInputStream input,
							com.google.protobuf.ExtensionRegistryLite extensionRegistry)
							throws com.google.protobuf.InvalidProtocolBufferException {
						return new ContainerMetric(input, extensionRegistry);
					}
				};

		static {
			defaultInstance = new ContainerMetric(true);
			defaultInstance.initFields();
		}

		private final com.google.protobuf.UnknownFieldSet unknownFields;

		private int bitField0_;

		private java.lang.Object applicationId_;

		private int instanceIndex_;

		private double cpuPercentage_;

		private long memoryBytes_;

		private long diskBytes_;

		private byte memoizedIsInitialized = -1;

		private int memoizedSerializedSize = -1;

		// Use ContainerMetric.newBuilder() to construct.
		private ContainerMetric(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
			super(builder);
			this.unknownFields = builder.getUnknownFields();
		}

		private ContainerMetric(boolean noInit) {
			this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance();
		}

		private ContainerMetric(
				com.google.protobuf.CodedInputStream input,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws com.google.protobuf.InvalidProtocolBufferException {
			initFields();
			int mutable_bitField0_ = 0;
			com.google.protobuf.UnknownFieldSet.Builder unknownFields =
					com.google.protobuf.UnknownFieldSet.newBuilder();
			try {
				boolean done = false;
				while (!done) {
					int tag = input.readTag();
					switch (tag) {
						case 0:
							done = true;
							break;
						default: {
							if (!parseUnknownField(input, unknownFields,
									extensionRegistry, tag)) {
								done = true;
							}
							break;
						}
						case 10: {
							com.google.protobuf.ByteString bs = input.readBytes();
							bitField0_ |= 0x00000001;
							applicationId_ = bs;
							break;
						}
						case 16: {
							bitField0_ |= 0x00000002;
							instanceIndex_ = input.readInt32();
							break;
						}
						case 25: {
							bitField0_ |= 0x00000004;
							cpuPercentage_ = input.readDouble();
							break;
						}
						case 32: {
							bitField0_ |= 0x00000008;
							memoryBytes_ = input.readUInt64();
							break;
						}
						case 40: {
							bitField0_ |= 0x00000010;
							diskBytes_ = input.readUInt64();
							break;
						}
					}
				}
			}
			catch (com.google.protobuf.InvalidProtocolBufferException e) {
				throw e.setUnfinishedMessage(this);
			}
			catch (java.io.IOException e) {
				throw new com.google.protobuf.InvalidProtocolBufferException(
						e.getMessage()).setUnfinishedMessage(this);
			}
			finally {
				this.unknownFields = unknownFields.build();
				makeExtensionsImmutable();
			}
		}

		public static ContainerMetric getDefaultInstance() {
			return defaultInstance;
		}

		public static final com.google.protobuf.Descriptors.Descriptor
		getDescriptor() {
			return org.cloudfoundry.dropsonde.events.MetricFactory.internal_static_events_ContainerMetric_descriptor;
		}

		public static org.cloudfoundry.dropsonde.events.MetricFactory.ContainerMetric parseFrom(
				com.google.protobuf.ByteString data)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data);
		}

		public static org.cloudfoundry.dropsonde.events.MetricFactory.ContainerMetric parseFrom(
				com.google.protobuf.ByteString data,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data, extensionRegistry);
		}

		public static org.cloudfoundry.dropsonde.events.MetricFactory.ContainerMetric parseFrom(byte[] data)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data);
		}

		public static org.cloudfoundry.dropsonde.events.MetricFactory.ContainerMetric parseFrom(
				byte[] data,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws com.google.protobuf.InvalidProtocolBufferException {
			return PARSER.parseFrom(data, extensionRegistry);
		}

		public static org.cloudfoundry.dropsonde.events.MetricFactory.ContainerMetric parseFrom(java.io.InputStream input)
				throws java.io.IOException {
			return PARSER.parseFrom(input);
		}

		public static org.cloudfoundry.dropsonde.events.MetricFactory.ContainerMetric parseFrom(
				java.io.InputStream input,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws java.io.IOException {
			return PARSER.parseFrom(input, extensionRegistry);
		}

		public static org.cloudfoundry.dropsonde.events.MetricFactory.ContainerMetric parseDelimitedFrom(java.io.InputStream input)
				throws java.io.IOException {
			return PARSER.parseDelimitedFrom(input);
		}

		public static org.cloudfoundry.dropsonde.events.MetricFactory.ContainerMetric parseDelimitedFrom(
				java.io.InputStream input,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws java.io.IOException {
			return PARSER.parseDelimitedFrom(input, extensionRegistry);
		}

		public static org.cloudfoundry.dropsonde.events.MetricFactory.ContainerMetric parseFrom(
				com.google.protobuf.CodedInputStream input)
				throws java.io.IOException {
			return PARSER.parseFrom(input);
		}

		public static org.cloudfoundry.dropsonde.events.MetricFactory.ContainerMetric parseFrom(
				com.google.protobuf.CodedInputStream input,
				com.google.protobuf.ExtensionRegistryLite extensionRegistry)
				throws java.io.IOException {
			return PARSER.parseFrom(input, extensionRegistry);
		}

		public static Builder newBuilder() {
			return Builder.create();
		}

		public static Builder newBuilder(org.cloudfoundry.dropsonde.events.MetricFactory.ContainerMetric prototype) {
			return newBuilder().mergeFrom(prototype);
		}

		public ContainerMetric getDefaultInstanceForType() {
			return defaultInstance;
		}

		@java.lang.Override
		public final com.google.protobuf.UnknownFieldSet
		getUnknownFields() {
			return this.unknownFields;
		}

		protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
		internalGetFieldAccessorTable() {
			return org.cloudfoundry.dropsonde.events.MetricFactory.internal_static_events_ContainerMetric_fieldAccessorTable
					.ensureFieldAccessorsInitialized(
							org.cloudfoundry.dropsonde.events.MetricFactory.ContainerMetric.class, org.cloudfoundry.dropsonde.events.MetricFactory.ContainerMetric.Builder.class);
		}

		@java.lang.Override
		public com.google.protobuf.Parser<ContainerMetric> getParserForType() {
			return PARSER;
		}

		/**
		 * <code>required string applicationId = 1;</code>
		 * <p>
		 * <pre>
		 * &#47; ID of the contained application.
		 * </pre>
		 */
		public boolean hasApplicationId() {
			return ((bitField0_ & 0x00000001) == 0x00000001);
		}

		/**
		 * <code>required string applicationId = 1;</code>
		 * <p>
		 * <pre>
		 * &#47; ID of the contained application.
		 * </pre>
		 */
		public java.lang.String getApplicationId() {
			java.lang.Object ref = applicationId_;
			if (ref instanceof java.lang.String) {
				return (java.lang.String) ref;
			}
			else {
				com.google.protobuf.ByteString bs =
						(com.google.protobuf.ByteString) ref;
				java.lang.String s = bs.toStringUtf8();
				if (bs.isValidUtf8()) {
					applicationId_ = s;
				}
				return s;
			}
		}

		/**
		 * <code>required string applicationId = 1;</code>
		 * <p>
		 * <pre>
		 * &#47; ID of the contained application.
		 * </pre>
		 */
		public com.google.protobuf.ByteString
		getApplicationIdBytes() {
			java.lang.Object ref = applicationId_;
			if (ref instanceof java.lang.String) {
				com.google.protobuf.ByteString b =
						com.google.protobuf.ByteString.copyFromUtf8(
								(java.lang.String) ref);
				applicationId_ = b;
				return b;
			}
			else {
				return (com.google.protobuf.ByteString) ref;
			}
		}

		/**
		 * <code>required int32 instanceIndex = 2;</code>
		 * <p>
		 * <pre>
		 * &#47; Instance index of the contained application. (This, with applicationId, should uniquely identify a container.)
		 * </pre>
		 */
		public boolean hasInstanceIndex() {
			return ((bitField0_ & 0x00000002) == 0x00000002);
		}

		/**
		 * <code>required int32 instanceIndex = 2;</code>
		 * <p>
		 * <pre>
		 * &#47; Instance index of the contained application. (This, with applicationId, should uniquely identify a container.)
		 * </pre>
		 */
		public int getInstanceIndex() {
			return instanceIndex_;
		}

		/**
		 * <code>required double cpuPercentage = 3;</code>
		 * <p>
		 * <pre>
		 * &#47; CPU used, on a scale of 0 to 100.
		 * </pre>
		 */
		public boolean hasCpuPercentage() {
			return ((bitField0_ & 0x00000004) == 0x00000004);
		}

		/**
		 * <code>required double cpuPercentage = 3;</code>
		 * <p>
		 * <pre>
		 * &#47; CPU used, on a scale of 0 to 100.
		 * </pre>
		 */
		public double getCpuPercentage() {
			return cpuPercentage_;
		}

		/**
		 * <code>required uint64 memoryBytes = 4;</code>
		 * <p>
		 * <pre>
		 * &#47; Bytes of memory used.
		 * </pre>
		 */
		public boolean hasMemoryBytes() {
			return ((bitField0_ & 0x00000008) == 0x00000008);
		}

		/**
		 * <code>required uint64 memoryBytes = 4;</code>
		 * <p>
		 * <pre>
		 * &#47; Bytes of memory used.
		 * </pre>
		 */
		public long getMemoryBytes() {
			return memoryBytes_;
		}

		/**
		 * <code>required uint64 diskBytes = 5;</code>
		 * <p>
		 * <pre>
		 * &#47; Bytes of disk used.
		 * </pre>
		 */
		public boolean hasDiskBytes() {
			return ((bitField0_ & 0x00000010) == 0x00000010);
		}

		/**
		 * <code>required uint64 diskBytes = 5;</code>
		 * <p>
		 * <pre>
		 * &#47; Bytes of disk used.
		 * </pre>
		 */
		public long getDiskBytes() {
			return diskBytes_;
		}

		private void initFields() {
			applicationId_ = "";
			instanceIndex_ = 0;
			cpuPercentage_ = 0D;
			memoryBytes_ = 0L;
			diskBytes_ = 0L;
		}

		public final boolean isInitialized() {
			byte isInitialized = memoizedIsInitialized;
			if (isInitialized == 1) return true;
			if (isInitialized == 0) return false;

			if (!hasApplicationId()) {
				memoizedIsInitialized = 0;
				return false;
			}
			if (!hasInstanceIndex()) {
				memoizedIsInitialized = 0;
				return false;
			}
			if (!hasCpuPercentage()) {
				memoizedIsInitialized = 0;
				return false;
			}
			if (!hasMemoryBytes()) {
				memoizedIsInitialized = 0;
				return false;
			}
			if (!hasDiskBytes()) {
				memoizedIsInitialized = 0;
				return false;
			}
			memoizedIsInitialized = 1;
			return true;
		}

		public void writeTo(com.google.protobuf.CodedOutputStream output)
				throws java.io.IOException {
			getSerializedSize();
			if (((bitField0_ & 0x00000001) == 0x00000001)) {
				output.writeBytes(1, getApplicationIdBytes());
			}
			if (((bitField0_ & 0x00000002) == 0x00000002)) {
				output.writeInt32(2, instanceIndex_);
			}
			if (((bitField0_ & 0x00000004) == 0x00000004)) {
				output.writeDouble(3, cpuPercentage_);
			}
			if (((bitField0_ & 0x00000008) == 0x00000008)) {
				output.writeUInt64(4, memoryBytes_);
			}
			if (((bitField0_ & 0x00000010) == 0x00000010)) {
				output.writeUInt64(5, diskBytes_);
			}
			getUnknownFields().writeTo(output);
		}

		public int getSerializedSize() {
			int size = memoizedSerializedSize;
			if (size != -1) return size;

			size = 0;
			if (((bitField0_ & 0x00000001) == 0x00000001)) {
				size += com.google.protobuf.CodedOutputStream
						.computeBytesSize(1, getApplicationIdBytes());
			}
			if (((bitField0_ & 0x00000002) == 0x00000002)) {
				size += com.google.protobuf.CodedOutputStream
						.computeInt32Size(2, instanceIndex_);
			}
			if (((bitField0_ & 0x00000004) == 0x00000004)) {
				size += com.google.protobuf.CodedOutputStream
						.computeDoubleSize(3, cpuPercentage_);
			}
			if (((bitField0_ & 0x00000008) == 0x00000008)) {
				size += com.google.protobuf.CodedOutputStream
						.computeUInt64Size(4, memoryBytes_);
			}
			if (((bitField0_ & 0x00000010) == 0x00000010)) {
				size += com.google.protobuf.CodedOutputStream
						.computeUInt64Size(5, diskBytes_);
			}
			size += getUnknownFields().getSerializedSize();
			memoizedSerializedSize = size;
			return size;
		}

		@java.lang.Override
		protected java.lang.Object writeReplace()
				throws java.io.ObjectStreamException {
			return super.writeReplace();
		}

		public Builder newBuilderForType() {
			return newBuilder();
		}

		public Builder toBuilder() {
			return newBuilder(this);
		}

		@java.lang.Override
		protected Builder newBuilderForType(
				com.google.protobuf.GeneratedMessage.BuilderParent parent) {
			Builder builder = new Builder(parent);
			return builder;
		}

		/**
		 * Protobuf type {@code events.ContainerMetric}
		 * <p>
		 * <pre>
		 * &#47; A ContainerMetric records resource usage of an app in a container.
		 * </pre>
		 */
		public static final class Builder extends
				com.google.protobuf.GeneratedMessage.Builder<Builder> implements
				// @@protoc_insertion_point(builder_implements:events.ContainerMetric)
				org.cloudfoundry.dropsonde.events.MetricFactory.ContainerMetricOrBuilder {
			private int bitField0_;

			private java.lang.Object applicationId_ = "";

			private int instanceIndex_;

			private double cpuPercentage_;

			private long memoryBytes_;

			private long diskBytes_;

			// Construct using org.cloudfoundry.dropsonde.events.MetricFactory.ContainerMetric.newBuilder()
			private Builder() {
				maybeForceBuilderInitialization();
			}

			private Builder(
					com.google.protobuf.GeneratedMessage.BuilderParent parent) {
				super(parent);
				maybeForceBuilderInitialization();
			}

			public static final com.google.protobuf.Descriptors.Descriptor
			getDescriptor() {
				return org.cloudfoundry.dropsonde.events.MetricFactory.internal_static_events_ContainerMetric_descriptor;
			}

			private static Builder create() {
				return new Builder();
			}

			protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
			internalGetFieldAccessorTable() {
				return org.cloudfoundry.dropsonde.events.MetricFactory.internal_static_events_ContainerMetric_fieldAccessorTable
						.ensureFieldAccessorsInitialized(
								org.cloudfoundry.dropsonde.events.MetricFactory.ContainerMetric.class, org.cloudfoundry.dropsonde.events.MetricFactory.ContainerMetric.Builder.class);
			}

			private void maybeForceBuilderInitialization() {
				if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
				}
			}

			public Builder clear() {
				super.clear();
				applicationId_ = "";
				bitField0_ = (bitField0_ & ~0x00000001);
				instanceIndex_ = 0;
				bitField0_ = (bitField0_ & ~0x00000002);
				cpuPercentage_ = 0D;
				bitField0_ = (bitField0_ & ~0x00000004);
				memoryBytes_ = 0L;
				bitField0_ = (bitField0_ & ~0x00000008);
				diskBytes_ = 0L;
				bitField0_ = (bitField0_ & ~0x00000010);
				return this;
			}

			public Builder clone() {
				return create().mergeFrom(buildPartial());
			}

			public com.google.protobuf.Descriptors.Descriptor
			getDescriptorForType() {
				return org.cloudfoundry.dropsonde.events.MetricFactory.internal_static_events_ContainerMetric_descriptor;
			}

			public org.cloudfoundry.dropsonde.events.MetricFactory.ContainerMetric getDefaultInstanceForType() {
				return org.cloudfoundry.dropsonde.events.MetricFactory.ContainerMetric.getDefaultInstance();
			}

			public org.cloudfoundry.dropsonde.events.MetricFactory.ContainerMetric build() {
				org.cloudfoundry.dropsonde.events.MetricFactory.ContainerMetric result = buildPartial();
				if (!result.isInitialized()) {
					throw newUninitializedMessageException(result);
				}
				return result;
			}

			public org.cloudfoundry.dropsonde.events.MetricFactory.ContainerMetric buildPartial() {
				org.cloudfoundry.dropsonde.events.MetricFactory.ContainerMetric result = new org.cloudfoundry.dropsonde.events.MetricFactory.ContainerMetric(this);
				int from_bitField0_ = bitField0_;
				int to_bitField0_ = 0;
				if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
					to_bitField0_ |= 0x00000001;
				}
				result.applicationId_ = applicationId_;
				if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
					to_bitField0_ |= 0x00000002;
				}
				result.instanceIndex_ = instanceIndex_;
				if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
					to_bitField0_ |= 0x00000004;
				}
				result.cpuPercentage_ = cpuPercentage_;
				if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
					to_bitField0_ |= 0x00000008;
				}
				result.memoryBytes_ = memoryBytes_;
				if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
					to_bitField0_ |= 0x00000010;
				}
				result.diskBytes_ = diskBytes_;
				result.bitField0_ = to_bitField0_;
				onBuilt();
				return result;
			}

			public Builder mergeFrom(com.google.protobuf.Message other) {
				if (other instanceof org.cloudfoundry.dropsonde.events.MetricFactory.ContainerMetric) {
					return mergeFrom((org.cloudfoundry.dropsonde.events.MetricFactory.ContainerMetric) other);
				}
				else {
					super.mergeFrom(other);
					return this;
				}
			}

			public Builder mergeFrom(org.cloudfoundry.dropsonde.events.MetricFactory.ContainerMetric other) {
				if (other == org.cloudfoundry.dropsonde.events.MetricFactory.ContainerMetric.getDefaultInstance())
					return this;
				if (other.hasApplicationId()) {
					bitField0_ |= 0x00000001;
					applicationId_ = other.applicationId_;
					onChanged();
				}
				if (other.hasInstanceIndex()) {
					setInstanceIndex(other.getInstanceIndex());
				}
				if (other.hasCpuPercentage()) {
					setCpuPercentage(other.getCpuPercentage());
				}
				if (other.hasMemoryBytes()) {
					setMemoryBytes(other.getMemoryBytes());
				}
				if (other.hasDiskBytes()) {
					setDiskBytes(other.getDiskBytes());
				}
				this.mergeUnknownFields(other.getUnknownFields());
				return this;
			}

			public final boolean isInitialized() {
				if (!hasApplicationId()) {

					return false;
				}
				if (!hasInstanceIndex()) {

					return false;
				}
				if (!hasCpuPercentage()) {

					return false;
				}
				if (!hasMemoryBytes()) {

					return false;
				}
				if (!hasDiskBytes()) {

					return false;
				}
				return true;
			}

			public Builder mergeFrom(
					com.google.protobuf.CodedInputStream input,
					com.google.protobuf.ExtensionRegistryLite extensionRegistry)
					throws java.io.IOException {
				org.cloudfoundry.dropsonde.events.MetricFactory.ContainerMetric parsedMessage = null;
				try {
					parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
				}
				catch (com.google.protobuf.InvalidProtocolBufferException e) {
					parsedMessage = (org.cloudfoundry.dropsonde.events.MetricFactory.ContainerMetric) e.getUnfinishedMessage();
					throw e;
				}
				finally {
					if (parsedMessage != null) {
						mergeFrom(parsedMessage);
					}
				}
				return this;
			}

			/**
			 * <code>required string applicationId = 1;</code>
			 * <p>
			 * <pre>
			 * &#47; ID of the contained application.
			 * </pre>
			 */
			public boolean hasApplicationId() {
				return ((bitField0_ & 0x00000001) == 0x00000001);
			}

			/**
			 * <code>required string applicationId = 1;</code>
			 * <p>
			 * <pre>
			 * &#47; ID of the contained application.
			 * </pre>
			 */
			public java.lang.String getApplicationId() {
				java.lang.Object ref = applicationId_;
				if (!(ref instanceof java.lang.String)) {
					com.google.protobuf.ByteString bs =
							(com.google.protobuf.ByteString) ref;
					java.lang.String s = bs.toStringUtf8();
					if (bs.isValidUtf8()) {
						applicationId_ = s;
					}
					return s;
				}
				else {
					return (java.lang.String) ref;
				}
			}

			/**
			 * <code>required string applicationId = 1;</code>
			 * <p>
			 * <pre>
			 * &#47; ID of the contained application.
			 * </pre>
			 */
			public Builder setApplicationId(
					java.lang.String value) {
				if (value == null) {
					throw new NullPointerException();
				}
				bitField0_ |= 0x00000001;
				applicationId_ = value;
				onChanged();
				return this;
			}

			/**
			 * <code>required string applicationId = 1;</code>
			 * <p>
			 * <pre>
			 * &#47; ID of the contained application.
			 * </pre>
			 */
			public com.google.protobuf.ByteString
			getApplicationIdBytes() {
				java.lang.Object ref = applicationId_;
				if (ref instanceof String) {
					com.google.protobuf.ByteString b =
							com.google.protobuf.ByteString.copyFromUtf8(
									(java.lang.String) ref);
					applicationId_ = b;
					return b;
				}
				else {
					return (com.google.protobuf.ByteString) ref;
				}
			}

			/**
			 * <code>required string applicationId = 1;</code>
			 * <p>
			 * <pre>
			 * &#47; ID of the contained application.
			 * </pre>
			 */
			public Builder setApplicationIdBytes(
					com.google.protobuf.ByteString value) {
				if (value == null) {
					throw new NullPointerException();
				}
				bitField0_ |= 0x00000001;
				applicationId_ = value;
				onChanged();
				return this;
			}

			/**
			 * <code>required string applicationId = 1;</code>
			 * <p>
			 * <pre>
			 * &#47; ID of the contained application.
			 * </pre>
			 */
			public Builder clearApplicationId() {
				bitField0_ = (bitField0_ & ~0x00000001);
				applicationId_ = getDefaultInstance().getApplicationId();
				onChanged();
				return this;
			}

			/**
			 * <code>required int32 instanceIndex = 2;</code>
			 * <p>
			 * <pre>
			 * &#47; Instance index of the contained application. (This, with applicationId, should uniquely identify a container.)
			 * </pre>
			 */
			public boolean hasInstanceIndex() {
				return ((bitField0_ & 0x00000002) == 0x00000002);
			}

			/**
			 * <code>required int32 instanceIndex = 2;</code>
			 * <p>
			 * <pre>
			 * &#47; Instance index of the contained application. (This, with applicationId, should uniquely identify a container.)
			 * </pre>
			 */
			public int getInstanceIndex() {
				return instanceIndex_;
			}

			/**
			 * <code>required int32 instanceIndex = 2;</code>
			 * <p>
			 * <pre>
			 * &#47; Instance index of the contained application. (This, with applicationId, should uniquely identify a container.)
			 * </pre>
			 */
			public Builder setInstanceIndex(int value) {
				bitField0_ |= 0x00000002;
				instanceIndex_ = value;
				onChanged();
				return this;
			}

			/**
			 * <code>required int32 instanceIndex = 2;</code>
			 * <p>
			 * <pre>
			 * &#47; Instance index of the contained application. (This, with applicationId, should uniquely identify a container.)
			 * </pre>
			 */
			public Builder clearInstanceIndex() {
				bitField0_ = (bitField0_ & ~0x00000002);
				instanceIndex_ = 0;
				onChanged();
				return this;
			}

			/**
			 * <code>required double cpuPercentage = 3;</code>
			 * <p>
			 * <pre>
			 * &#47; CPU used, on a scale of 0 to 100.
			 * </pre>
			 */
			public boolean hasCpuPercentage() {
				return ((bitField0_ & 0x00000004) == 0x00000004);
			}

			/**
			 * <code>required double cpuPercentage = 3;</code>
			 * <p>
			 * <pre>
			 * &#47; CPU used, on a scale of 0 to 100.
			 * </pre>
			 */
			public double getCpuPercentage() {
				return cpuPercentage_;
			}

			/**
			 * <code>required double cpuPercentage = 3;</code>
			 * <p>
			 * <pre>
			 * &#47; CPU used, on a scale of 0 to 100.
			 * </pre>
			 */
			public Builder setCpuPercentage(double value) {
				bitField0_ |= 0x00000004;
				cpuPercentage_ = value;
				onChanged();
				return this;
			}

			/**
			 * <code>required double cpuPercentage = 3;</code>
			 * <p>
			 * <pre>
			 * &#47; CPU used, on a scale of 0 to 100.
			 * </pre>
			 */
			public Builder clearCpuPercentage() {
				bitField0_ = (bitField0_ & ~0x00000004);
				cpuPercentage_ = 0D;
				onChanged();
				return this;
			}

			/**
			 * <code>required uint64 memoryBytes = 4;</code>
			 * <p>
			 * <pre>
			 * &#47; Bytes of memory used.
			 * </pre>
			 */
			public boolean hasMemoryBytes() {
				return ((bitField0_ & 0x00000008) == 0x00000008);
			}

			/**
			 * <code>required uint64 memoryBytes = 4;</code>
			 * <p>
			 * <pre>
			 * &#47; Bytes of memory used.
			 * </pre>
			 */
			public long getMemoryBytes() {
				return memoryBytes_;
			}

			/**
			 * <code>required uint64 memoryBytes = 4;</code>
			 * <p>
			 * <pre>
			 * &#47; Bytes of memory used.
			 * </pre>
			 */
			public Builder setMemoryBytes(long value) {
				bitField0_ |= 0x00000008;
				memoryBytes_ = value;
				onChanged();
				return this;
			}

			/**
			 * <code>required uint64 memoryBytes = 4;</code>
			 * <p>
			 * <pre>
			 * &#47; Bytes of memory used.
			 * </pre>
			 */
			public Builder clearMemoryBytes() {
				bitField0_ = (bitField0_ & ~0x00000008);
				memoryBytes_ = 0L;
				onChanged();
				return this;
			}

			/**
			 * <code>required uint64 diskBytes = 5;</code>
			 * <p>
			 * <pre>
			 * &#47; Bytes of disk used.
			 * </pre>
			 */
			public boolean hasDiskBytes() {
				return ((bitField0_ & 0x00000010) == 0x00000010);
			}

			/**
			 * <code>required uint64 diskBytes = 5;</code>
			 * <p>
			 * <pre>
			 * &#47; Bytes of disk used.
			 * </pre>
			 */
			public long getDiskBytes() {
				return diskBytes_;
			}

			/**
			 * <code>required uint64 diskBytes = 5;</code>
			 * <p>
			 * <pre>
			 * &#47; Bytes of disk used.
			 * </pre>
			 */
			public Builder setDiskBytes(long value) {
				bitField0_ |= 0x00000010;
				diskBytes_ = value;
				onChanged();
				return this;
			}

			/**
			 * <code>required uint64 diskBytes = 5;</code>
			 * <p>
			 * <pre>
			 * &#47; Bytes of disk used.
			 * </pre>
			 */
			public Builder clearDiskBytes() {
				bitField0_ = (bitField0_ & ~0x00000010);
				diskBytes_ = 0L;
				onChanged();
				return this;
			}

			// @@protoc_insertion_point(builder_scope:events.ContainerMetric)
		}

		// @@protoc_insertion_point(class_scope:events.ContainerMetric)
	}

	// @@protoc_insertion_point(outer_class_scope)
}
